/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package biometricauthentication;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;


/**
 *
 * @author mahesh
 */
public class Signup extends javax.swing.JFrame {

    private String letter;
    private long presstime;
    private long releasetime;
    private long timedif;
    private static int occurancep=0;
    private static int occurancer=0;
    private Map<String, Long> keypress;
    private Map<String, Long> keyrelease;
    private Map<String, Long> keytime;

    private static Signup signup;
    
    String url = "jdbc:derby://localhost:1527/BiometricAuthentication";
    String username = "mahesh";
    String password = "1234";
    Connection conn = null;
    Statement st;
    /**
     * Creates new form Signup
     */
    public Signup() {
        initComponents();
        this.keypress = new LinkedHashMap<>();
        this.keyrelease = new LinkedHashMap<>();
        this.keytime = new LinkedHashMap<>();
        this.btnSignup.setEnabled(false);
    }

    public static Signup getinstance() {
        if (signup == null) {
            signup = new Signup();
        }
        return signup;
    }

    public void btnstate() {
        if (tbxUser.getText().isEmpty() || tbxPassword.getText().isEmpty()) {
            btnSignup.setEnabled(false);
            keypress.clear();
            keyrelease.clear();
            keytime.clear();
            this.occurancep=0;
            this.occurancer=0;
        } else {
            btnSignup.setEnabled(true);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        tbxUser = new javax.swing.JTextField();
        tbxPassword = new javax.swing.JPasswordField();
        btnSignup = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Sign Up");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setText("User Name");

        jLabel2.setText("Password");

        tbxUser.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tbxUserKeyReleased(evt);
            }
        });

        tbxPassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tbxPasswordKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tbxPasswordKeyReleased(evt);
            }
        });

        btnSignup.setText("Sign Up");
        btnSignup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSignupActionPerformed(evt);
            }
        });

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnSignup, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(tbxUser)
                    .addComponent(tbxPassword))
                .addContainerGap(60, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(83, 83, 83)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(tbxUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tbxPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSignup)
                    .addComponent(btnCancel))
                .addContainerGap(57, Short.MAX_VALUE))
        );

        jLabel1.getAccessibleContext().setAccessibleName("lblUser");
        jLabel2.getAccessibleContext().setAccessibleName("lblPassword");
        tbxUser.getAccessibleContext().setAccessibleName("tbxUser");
        tbxPassword.getAccessibleContext().setAccessibleName("tbxPassword");
        btnSignup.getAccessibleContext().setAccessibleName("btnSignup");
        btnCancel.getAccessibleContext().setAccessibleName("btnCancel");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tbxPasswordKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tbxPasswordKeyPressed
        letter = Character.toString(evt.getKeyChar()).toLowerCase();
        presstime = System.currentTimeMillis();
        if (keyrelease.containsKey(letter)) {
            occurancep++;
            letter = letter + Integer.toString(occurancep);
        }
        keypress.put(letter, presstime);
        System.out.print(letter + ": ");
        System.out.println(presstime);
    }//GEN-LAST:event_tbxPasswordKeyPressed

    private void tbxPasswordKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tbxPasswordKeyReleased
        letter = Character.toString(evt.getKeyChar()).toLowerCase();
        releasetime = System.currentTimeMillis();
        if(keyrelease.containsKey(letter)){
            occurancer++;
            letter = letter + Integer.toString(occurancer);
        }
        keyrelease.put(letter, releasetime);
        System.out.print(letter + ": ");
        System.out.println(releasetime);
        btnstate();
    }//GEN-LAST:event_tbxPasswordKeyReleased

    private void btnSignupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSignupActionPerformed
        System.out.println(keypress);
        System.out.println(keyrelease);
        ArrayList keyreleaselist = new ArrayList<>(keyrelease.keySet());
        ArrayList dblist = new ArrayList<>();
        ArrayList pressdiff = new ArrayList<>();
        ArrayList releasediff = new ArrayList<>();
        String dblist1;

        for (int i = 0; i < keypress.size(); i++) {
            timedif = keyrelease.get(keyreleaselist.get(i)) - keypress.get(keyreleaselist.get(i));
            keytime.put(keyreleaselist.get(i).toString(), timedif);
            dblist.add(2*i, keyreleaselist.get(i).toString());
            dblist.add((2*i)+1, timedif);
            
            
            if(i+1<keypress.size()){
                pressdiff.add(keypress.get(keyreleaselist.get(i+1)) - keypress.get(keyreleaselist.get(i)));
                releasediff.add(keyrelease.get(keyreleaselist.get(i+1)) - keyrelease.get(keyreleaselist.get(i)));
            }
        }
        dblist.add("1");
        pressdiff.add(0, "1");
        releasediff.add(0, "1");
        pressdiff.add("1");
        releasediff.add("1");
        System.out.println(keytime);
        System.out.println(dblist);
        System.out.println(pressdiff);
        System.out.println(releasediff);
        dblist1 = dblist.toString();
        String pressdiff1 = pressdiff.toString();
        String releasediff1 = releasediff.toString();

        String username = tbxUser.getText().trim();
        String password = String.valueOf(tbxPassword.getPassword());
        System.out.println(password);
    
        String query = "insert into user_credential(Name, password, time, pressdiff, releasediff)" + " values (?, ?, ?, ?,?)";
        PreparedStatement preparedStmt;
        try {
            preparedStmt = conn.prepareStatement(query);
            preparedStmt.setString(1, username);
            preparedStmt.setString(2, password);
            preparedStmt.setString(3, dblist1);
            preparedStmt.setString(4, pressdiff1);
            preparedStmt.setString(5, releasediff1);
            
            preparedStmt.execute();
            
        } catch (SQLException ex) {
            Logger.getLogger(Signup.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(rootPane, "Already there is a user with that username", null, JOptionPane.ERROR_MESSAGE);
            System.out.println("Already there is a user with that username");
        }
        try {
            conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(Signup.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnSignupActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        this.dispose();
        Startup.getinstance().setVisible(true);
    }//GEN-LAST:event_btnCancelActionPerformed

    private void tbxUserKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tbxUserKeyReleased
        btnstate();
    }//GEN-LAST:event_tbxUserKeyReleased

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        try {
            this.conn = DriverManager.getConnection(url, username, password);
            System.out.println("Database connected!");
            st = conn.createStatement();
        } catch (SQLException ex) {
            Logger.getLogger(Signup.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("Cannot connect the database!");
        }
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Signup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Signup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Signup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Signup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Signup().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnSignup;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPasswordField tbxPassword;
    private javax.swing.JTextField tbxUser;
    // End of variables declaration//GEN-END:variables
}
