/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package biometricauthentication;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author mahesh
 */
public class Login extends javax.swing.JFrame {
    private String letter;
    private long presstime;
    private long releasetime;
    private long timedif;
    private static int occurancep=0;
    private static int occurancer=0;
    private Map<String, Long> keypress;
    private Map<String, Long> keyrelease;
    private Map<String, Long> keytime;
    
    private static Login login;
    
    String url = "jdbc:derby://localhost:1527/BiometricAuthentication";
    String username = "mahesh";
    String password = "1234";
    Connection conn = null;
    Statement st;
    ResultSet res;
    
    public Login() {
        initComponents();
        this.keypress = new LinkedHashMap<>();
        this.keyrelease = new LinkedHashMap<>();
        this.keytime = new LinkedHashMap<>();
        this.btnLogin.setEnabled(false);
    }
    public static Login getinstance(){
        if(login == null){
            login = new Login();
        }return login;
    }
    public void btnstate(){
        if(tbxUser.getText().isEmpty() || tbxPassword.getText().isEmpty()){
            btnLogin.setEnabled(false);
            keypress.clear();
            keyrelease.clear();
            keytime.clear();
            this.occurancep = 0;
            this.occurancer = 0;
        }
        else{
            btnLogin.setEnabled(true);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        tbxUser = new javax.swing.JTextField();
        tbxPassword = new javax.swing.JPasswordField();
        btnLogin = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Login");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setText("User Name");
        jLabel1.setToolTipText("");

        jLabel2.setText("Password");

        tbxUser.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tbxUserKeyReleased(evt);
            }
        });

        tbxPassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tbxPasswordKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tbxPasswordKeyReleased(evt);
            }
        });

        btnLogin.setText("Login");
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                        .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(tbxUser)
                    .addComponent(tbxPassword))
                .addContainerGap(59, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(82, 82, 82)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(tbxUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tbxPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLogin)
                    .addComponent(btnCancel))
                .addContainerGap(59, Short.MAX_VALUE))
        );

        jLabel1.getAccessibleContext().setAccessibleName("lblUser");
        jLabel2.getAccessibleContext().setAccessibleName("lblPassword");
        tbxUser.getAccessibleContext().setAccessibleName("tbxUser");
        tbxPassword.getAccessibleContext().setAccessibleName("tbxPassword");
        btnLogin.getAccessibleContext().setAccessibleName("btnLogin");
        btnCancel.getAccessibleContext().setAccessibleName("btnCancel");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tbxPasswordKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tbxPasswordKeyPressed
        letter = Character.toString(evt.getKeyChar()).toLowerCase();
        presstime = System.currentTimeMillis();
        if (keyrelease.containsKey(letter)) {
            occurancep++;
            letter = letter + Integer.toString(occurancep);
        }
        keypress.put(letter, presstime);
        System.out.print(letter + ": ");
        System.out.println(presstime);
    }//GEN-LAST:event_tbxPasswordKeyPressed

    private void tbxPasswordKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tbxPasswordKeyReleased
        letter = Character.toString(evt.getKeyChar()).toLowerCase();
        releasetime = System.currentTimeMillis();
        if (keyrelease.containsKey(letter)) {
            occurancer++;
            letter = letter + Integer.toString(occurancer);
        }
        keyrelease.put(letter, releasetime);
        System.out.print(letter + ": ");
        System.out.println(releasetime);
        btnstate();
    }//GEN-LAST:event_tbxPasswordKeyReleased

    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed
        System.out.println(keypress);
        System.out.println(keyrelease);
        ArrayList keyreleaselist= new ArrayList<>(keyrelease.keySet());
        ArrayList pressdiff = new ArrayList<>();
        ArrayList releasediff = new ArrayList<>();
        
        for(int i=0; i<keypress.size(); i++){
            timedif = keyrelease.get(keyreleaselist.get(i)) - keypress.get(keyreleaselist.get(i));
            keytime.put(keyreleaselist.get(i).toString(), timedif);
            
            if (i + 1 < keypress.size()) {
                pressdiff.add(keypress.get(keyreleaselist.get(i + 1)) - keypress.get(keyreleaselist.get(i)));
                releasediff.add(keyrelease.get(keyreleaselist.get(i + 1)) - keyrelease.get(keyreleaselist.get(i)));
            }
            
        }
        System.out.println(keytime);
        
        String username = tbxUser.getText().trim();
        String password = String.valueOf(tbxPassword.getPassword());
        
        String query = "select password,time,pressdiff,releasediff from user_credential where Name='"+username+"'";
        try {
            st = conn.createStatement();
            res = st.executeQuery(query);
            
            boolean read = false;
            while (res.next()) {
                read = true;
                String getPass = res.getString("password");
                String getTime = res.getString("time");
                String getPress = res.getString("pressdiff");
                String getRelease = res.getString("releasediff");

                String[] getTime1 = getTime.split(",");
                String[] getPress1 = getPress.split(",");
                String[] getRelease1 = getRelease.split(",");

                if (getPass.equals(password)) {
                    int count = 0;
                    boolean success1 = false;
                    boolean success = false;
                    for (int x = 1; x < getTime1.length; x = x + 2) {
                        Long signup = Long.parseLong(getTime1[x].trim());
                        Long now = keytime.get(keyreleaselist.get(count));
                        count++;

                        System.out.println(now);
                        if (now < signup + 50 && now > signup - 50) {
                            success = true;
                            //System.out.println(now);
                        } else {
                            success = false;
                            JOptionPane.showMessageDialog(rootPane, "typing speed is out of range.Try again.", null, JOptionPane.ERROR_MESSAGE);
                            System.out.println("typing speed is out of range.Try again");
                            break;
                        }
                    }
                    for (int x = 1; x < getPress1.length - 1; x++) {
                        Long signPress = Long.parseLong(getPress1[x].trim());
                        Long signRelease = Long.parseLong(getRelease1[x].trim());
                        Long nowPress = (Long) pressdiff.get(x - 1);
                        Long nowRelease = (Long) releasediff.get(x - 1);

                        if ((nowPress < signPress + 100 && nowPress > signRelease - 100) && (nowRelease < signPress + 100 && nowRelease > signRelease - 100)) {
                            success1 = true;
                        } else {
                            success1 = false;
                            JOptionPane.showMessageDialog(rootPane, "typing speed is out of range.Try again.", null, JOptionPane.ERROR_MESSAGE);
                            System.out.println("typing speed is out of range.Try again sucess1");
                            break;
                        }
                    }
                    if (success && success1) {
                        JOptionPane.showMessageDialog(rootPane, "Login successfull", null, JOptionPane.PLAIN_MESSAGE);
                    }
                } else {
                    System.out.println(password);
                    System.out.println(getPass);
                    JOptionPane.showMessageDialog(rootPane, "Wrong Password is Entered", null, JOptionPane.ERROR_MESSAGE);
                    System.out.println("Wrong Password Entered");
                }
            }
            if(!read){
                JOptionPane.showMessageDialog(rootPane, "There is no user registered with that name", null, JOptionPane.ERROR_MESSAGE);
            }
           
            
            

        } catch (SQLException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(rootPane, "There is no user", null, JOptionPane.ERROR_MESSAGE);
            System.out.println("Invalid username");

        }

    }//GEN-LAST:event_btnLoginActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        this.dispose();
        Startup.getinstance().setVisible(true);
    }//GEN-LAST:event_btnCancelActionPerformed

    private void tbxUserKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tbxUserKeyReleased
        btnstate();
    }//GEN-LAST:event_tbxUserKeyReleased

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        try {
            this.conn = DriverManager.getConnection(url, username, password);
            System.out.println("Database connected!");
            st = conn.createStatement();
        } catch (SQLException ex) {
            Logger.getLogger(Signup.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("Cannot connect the database!");
        }
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnLogin;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPasswordField tbxPassword;
    private javax.swing.JTextField tbxUser;
    // End of variables declaration//GEN-END:variables
}
